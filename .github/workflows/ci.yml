name: CI
on: push
jobs:
  build:
    name: Build & test
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - run: bun install --no-save --ignore-scripts
      - run: yarn build
      - run: yarn package -p onTag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
          APP_ENV: production
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

      - uses: actions/upload-artifact@v3
        with:
          name: distributables
          path: |
            dist/*.zip
            dist/*.dmg
            dist/*.yml
            dist/*.yaml
            !dist/**/*.app
          if-no-files-found: error

  publish:
    name: Publish a release
    runs-on: "ubuntu-20.04"
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: build
    steps:
      - name: Get all distributables
        uses: actions/download-artifact@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: ./*/
